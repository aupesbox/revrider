plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id "org.jetbrains.kotlin.android"
    id "com.google.gms.google-services"     // <-- add this
}


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdk = 35
    ndkVersion = "29.0.13599879"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.aupesbox.rydem"
        namespace = "com.aupesbox.rydem"
        minSdk = 23
        targetSdk = 33
        versionCode = 1
        versionName = "1.0.0"
        manifestPlaceholders = [
                redirectSchemeName: "spotify-sdk",
                redirectHostName: "auth"
        ]
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def appName = "Rydem"
            def versionName = variant.versionName
            def versionCode = variant.versionCode
            def buildType = variant.buildType.name
            outputFileName = "${appName}-v${versionName}(${versionCode})-${buildType}.aab"
        }
    }
}

flutter {
    source = "../.."
}

//plugins {
//    id "com.android.application"
//    id "kotlin-android"
//    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//    id "dev.flutter.flutter-gradle-plugin"
//}
//def keystoreProperties = new Properties()
//def keystorePropertiesFile = rootProject.file("key.properties")
//if (keystorePropertiesFile.exists()) {
//    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
//}
//
//
//android {
//
//    compileSdk = 35
//    ndkVersion = "29.0.13599879"
//
//    compileOptions {
//        sourceCompatibility = JavaVersion.VERSION_1_8
//        targetCompatibility = JavaVersion.VERSION_1_8
//    }
//
//    applicationVariants.all { variant ->
//        variant.outputs.all { output ->
//            def appName = "Rydem"
//            def versionName = variant.versionName
//            def versionCode = variant.versionCode
//            def buildType = variant.buildType.name
//            outputFileName = "${appName}-v${versionName}(${versionCode})-${buildType}.aab"
//        }
//    }
//
//    kotlinOptions {
//        jvmTarget = JavaVersion.VERSION_1_8
//    }
//    defaultConfig {
//        applicationId = "com.aupesbox.rydem"
//        namespace = "com.aupesbox.rydem"
//        minSdk = 21
//        targetSdk = 33
//        versionCode = 1
//        versionName = "1.0.0"
//       // manifestPlaceholders = [redirectScheme: "rydem"]
//        manifestPlaceholders = [
//                redirectSchemeName: "spotify-sdk",
//                redirectHostName: "auth"
//        ]
//    }
//
//
//    signingConfigs {
//        release {
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//        }
//    }
//Types {
////        release {
////            // TODO: Add your own signing config for the release build.
////            // Signing with the debug keys for now, so `flutter run --release` works.
////            signingConfig = signingConfigs.debug
////            minifyEnabled true
////            shrinkResources true
////            //signingConfig signingConfigs.release
////            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
////        }
//    release {
//        signingConfig signingConfigs.release
//        minifyEnabled false
//        shrinkResources false
//        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//    }
//    }
//}
//
//
//flutter {
//    source = "../.."
//}
